<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="14c53944-e54c-4225-825b-84fc03f51c18" name="Changes" comment="feat: Simplify CompileBoom.java by removing unused imports and variables (master)&#10;&#10;This commit removes unnecessary imports and variables from CompileBoom.java, including the removal of unused imports such as 'java.util.HashMap' and 'org.antlr.v4.runtime.*'. It also removes unused static final Strings TRUE_VALUE and FALSE_VALUE, and commented-out code. The .idea/workspace.xml was also updated in this commit.">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/boom/grammar/Boom.g4" beforeDir="false" afterPath="$PROJECT_DIR$/src/boom/grammar/Boom.g4" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "defliez"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="d1708231-7224-4521-ac3c-4e4e099ec73c" />
        <option name="url" value="https://github.com/defliez/BOOM.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2Vnw4SLJbbK2HX5v8Vdt7lCswKf" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Downloaded.Files.Path.Enabled": "false",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Libraries",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="RunCompiler" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="RunCompiler" />
      <module name="Boom" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.RunCompiler" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="14c53944-e54c-4225-825b-84fc03f51c18" name="Changes" comment="" />
      <created>1695484960822</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1695484960822</updated>
      <workItem from="1695986010227" duration="1152000" />
    </task>
    <task id="LOCAL-00001" summary="Created project in IntelliJ for esoteric language BOOM. Installed ANTLR plugin and added ANTLR as a library for the project. Created grammar file 'Boom.g4' and defined first iteration of basic grammar for the language.">
      <option name="closed" value="true" />
      <created>1695504243249</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1695504243249</updated>
    </task>
    <task id="LOCAL-00002" summary="Created project in IntelliJ for esoteric language BOOM. Installed ANTLR plugin and added ANTLR as a library for the project. Created grammar file 'Boom.g4' and defined first iteration of basic grammar for the language.">
      <option name="closed" value="true" />
      <created>1695504262416</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1695504262416</updated>
    </task>
    <task id="LOCAL-00003" summary="Create 'programs' directory, 'RunCompiler.java', 'CompileBoom.java', and 'add.boom'&#10;&#10;This commit encompasses several changes:&#10;&#10;- Created a new directory named 'programs' dedicated to storing BOOM language programs.&#10;- Introduced the 'RunCompiler.java' file, responsible for running the compiler. Added basic user input handling.&#10;- Generated an ANTLR Recognizer.&#10;- Added the 'CompileBoom.java' file. Implemented CompileBoom as a listener.&#10;- Made adjustments to the 'Boom.g4' grammar file, including handling EOF, '!' statements, 'expr,' 'unaryExpr,' and 'addExpr.'&#10;- Created the 'add.boom' file for testing addition operations involving numbers and variables.">
      <option name="closed" value="true" />
      <created>1695510396735</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1695510396735</updated>
    </task>
    <task id="LOCAL-00004" summary="Refactor Boom.interp and Boom.g4, add program to add two numbers.">
      <option name="closed" value="true" />
      <created>1695576071943</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1695576071943</updated>
    </task>
    <task id="LOCAL-00005" summary="feat: Extend CompileBoom and RunCompiler classes&#10;&#10;CompileBoom class has been extended with the addition of several import statements, and a large number of methods for handling context transitions in the BoomParser. This includes enterFile, exitFile, and similarly named methods for other elements in the grammar.&#10;&#10;RunCompiler class now includes import statements for various ANTLR and Java IO classes. The main method now uses ANTLRInputStream to read from the input file, generates a token stream, and walks the parse tree.&#10;&#10;BoomParser.java has been slightly refactored, with changes in ExprContext and AddExprContext.">
      <option name="closed" value="true" />
      <created>1695581634041</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1695581634041</updated>
    </task>
    <task id="LOCAL-00006" summary="feat(grammar): update grammar rules and simplify compiler code&#10;&#10;This commit includes updates to the grammar rules in Boom.g4, changes the print statement to accept an identifier, and adds a missing newline at the end of file in add.boom. In addition, it simplifies the CompileBoom.java by removing unnecessary overridden methods and adds a method to generate compiled code. It also updates RunCompiler.java to use the new method in CompileBoom.java.&#10;&#10;Changes:&#10;- Boom.g4: Updated grammar rules and changed print statement to accept an identifier instead of an expression.&#10;- add.boom: Added a missing newline at the end of file.&#10;- CompileBoom.java: Removed unnecessary overridden methods and added a method to generate compiled code.&#10;- RunCompiler.java: Updated to use the new method in CompileBoom.java to get compiled code.">
      <option name="closed" value="true" />
      <created>1695664536844</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1695664536844</updated>
    </task>
    <task id="LOCAL-00007" summary="feat(grammar): add comparison expressions to Boom.g4 grammar #master&#10;&#10;Added new comparison expressions to the Boom.g4 grammar file. The expressions include greaterExpr and lesserExpr, defined with 'HMPH' and 'GULP' operators respectively. Also introduced a while loop construct using the 'ZOINKS' and '?!'&#10;tokens.">
      <option name="closed" value="true" />
      <created>1695722409224</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1695722409224</updated>
    </task>
    <task id="LOCAL-00008" summary="Generate an ANTLR Recognizer from the updated grammar file Boom.g4.">
      <option name="closed" value="true" />
      <created>1695722730810</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1695722730810</updated>
    </task>
    <task id="LOCAL-00009" summary="feat: Update .gitignore, CompileBoom and RunCompiler.&#10;&#10;Created a new .gitignore file in the nand2tetris-vm-translator-master directory&#10;to ignore compiled class files, log files, BlueJ files, package files, virtual machine crash logs and IDE files.&#10;&#10;Updated the CompileBoom.java file to change the print command to pop and added additional functions for greater and lesser expressions, and while loops.&#10;&#10;Updated the RunCompiler.java file to prompt for the name of the compiled file, and write and save the compiled code to the specified file.&#10;&#10;Tested updated RunCompiler.java by inputting programs/add.boom as input file and saving the compiled file as programs/add.vm.&#10;&#10;Translated add.vm using the VM-Translator from https://github.com/koddas/nand2tetris-vm-translator , outputting the translated file to new file called out.vm.">
      <option name="closed" value="true" />
      <created>1695723354264</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1695723354264</updated>
    </task>
    <task id="LOCAL-00010" summary="feat: Implement while loop and comparison expressions in Boom language&#10;&#10;- Updated Boom.g4 grammar file to include lesser, greater, and cond expressions and modified while structure.&#10;- Modified CompileBoom.java to handle lesser, greater, and cond expressions.&#10;- Added while.boom sample program.">
      <option name="closed" value="true" />
      <created>1695834495520</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1695834495520</updated>
    </task>
    <task id="LOCAL-00011" summary="Generated ANTLR recognizer for the updated grammar file 'Boom.g4'.">
      <option name="closed" value="true" />
      <created>1695835992938</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1695835992938</updated>
    </task>
    <task id="LOCAL-00012" summary="feat: Update while loop syntax and compiler logic&#10;&#10;This commit includes updates on the while loop syntax in the source code and the Boom.g4 file. The while loop condition now must be enclosed in parenthesis for better readability. Also, the '?!' and '!?' symbols were&#10;replaced with '?' and '?!' respectively.&#10;&#10;In the CompileBoom.java file, logic for handling the while loop was added.&#10;This includes the usage of two stacks, 'enterLabelStack' and 'exitLabelStack',&#10;and two counters 'enterLabelCounter' and 'exitLabelCounter' to manage loop labels. The compiler now generates appropriate labels and goto statements for&#10;the while loop. The conditional jump 'if-goto' is however not functioning properly.&#10;&#10;A new desired output file was also created to reflect the desired assembly code output.&#10;&#10;The changes were tested and confirmed to work as expected.">
      <option name="closed" value="true" />
      <created>1695846053669</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1695846053669</updated>
    </task>
    <task id="LOCAL-00013" summary="feat: Update while loop syntax and compiler logic&#10;&#10;This commit includes updates on the while loop syntax in the source code and the Boom.g4 file. The while loop condition now must be enclosed in parenthesis for better readability. Also, the '?!' and '!?' symbols were&#10;replaced with '?' and '?!' respectively.&#10;&#10;In the CompileBoom.java file, logic for handling the while loop was added.&#10;This includes the usage of two stacks, 'enterLabelStack' and 'exitLabelStack',&#10;and two counters 'enterLabelCounter' and 'exitLabelCounter' to manage loop labels. The compiler now generates appropriate labels and goto statements for&#10;the while loop. The conditional jump 'if-goto' is however not functioning properly.&#10;&#10;A new desired output file was also created to reflect the desired assembly code output.&#10;&#10;The changes were tested and confirmed to work as expected.">
      <option name="closed" value="true" />
      <created>1695846093968</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1695846093968</updated>
    </task>
    <task id="LOCAL-00014" summary="feat: Add support for while loop in Boom language (#master)&#10;&#10;This commit introduces support for while loop in the Boom language. This feature has been implemented in the 'while.boom' program and the Boom grammar (Boom.g4). &#10;The changes include the addition of new constants for boolean values in 'CompileBoom.java', refactoring of exit and enter label handling in loops, and modification of certain condition handlers. Other changes include syntax cleanup, such as removal of excess newlines in 'while.boom'.">
      <option name="closed" value="true" />
      <created>1695850422866</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1695850422866</updated>
    </task>
    <task id="LOCAL-00015" summary="feat: Add new files and update Boom.g4 grammar (master)&#10;&#10;This commit adds two new files:&#10;-'nestedWhile.boom' to test that nested while loops work as expected. &#10;-'repAdd.boom' to test that repeated addition of 1 to chosen integer n works as expected and prints the right sum value.&#10;&#10;It also changes the grammar file Boom.g4 to allow nested loops.&#10;&#10;It also translates repAdd.vm to 'repAddOut.vm' using the VM translator from https://github.com/koddas/nand2tetris-vm-translator to then test the translated code in the nand2tetris VM Emulator.">
      <option name="closed" value="true" />
      <created>1695852726594</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1695852726594</updated>
    </task>
    <task id="LOCAL-00016" summary="feat: Simplify CompileBoom.java by removing unused imports and variables (master)&#10;&#10;This commit removes unnecessary imports and variables from CompileBoom.java, including the removal of unused imports such as 'java.util.HashMap' and 'org.antlr.v4.runtime.*'. It also removes unused static final Strings TRUE_VALUE and FALSE_VALUE, and commented-out code. The .idea/workspace.xml was also updated in this commit.">
      <option name="closed" value="true" />
      <created>1695852940193</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1695852940193</updated>
    </task>
    <option name="localTasksCounter" value="17" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.vm" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Created project in IntelliJ for esoteric language BOOM. Installed ANTLR plugin and added ANTLR as a library for the project. Created grammar file 'Boom.g4' and defined first iteration of basic grammar for the language." />
    <MESSAGE value="Create 'programs' directory, 'RunCompiler.java', 'CompileBoom.java', and 'add.boom'&#10;&#10;This commit encompasses several changes:&#10;&#10;- Created a new directory named 'programs' dedicated to storing BOOM language programs.&#10;- Introduced the 'RunCompiler.java' file, responsible for running the compiler. Added basic user input handling.&#10;- Generated an ANTLR Recognizer.&#10;- Added the 'CompileBoom.java' file. Implemented CompileBoom as a listener.&#10;- Made adjustments to the 'Boom.g4' grammar file, including handling EOF, '!' statements, 'expr,' 'unaryExpr,' and 'addExpr.'&#10;- Created the 'add.boom' file for testing addition operations involving numbers and variables." />
    <MESSAGE value="Refactor Boom.interp and Boom.g4, add program to add two numbers." />
    <MESSAGE value="feat: Extend CompileBoom and RunCompiler classes&#10;&#10;CompileBoom class has been extended with the addition of several import statements, and a large number of methods for handling context transitions in the BoomParser. This includes enterFile, exitFile, and similarly named methods for other elements in the grammar.&#10;&#10;RunCompiler class now includes import statements for various ANTLR and Java IO classes. The main method now uses ANTLRInputStream to read from the input file, generates a token stream, and walks the parse tree.&#10;&#10;BoomParser.java has been slightly refactored, with changes in ExprContext and AddExprContext." />
    <MESSAGE value="feat(grammar): update grammar rules and simplify compiler code&#10;&#10;This commit includes updates to the grammar rules in Boom.g4, changes the print statement to accept an identifier, and adds a missing newline at the end of file in add.boom. In addition, it simplifies the CompileBoom.java by removing unnecessary overridden methods and adds a method to generate compiled code. It also updates RunCompiler.java to use the new method in CompileBoom.java.&#10;&#10;Changes:&#10;- Boom.g4: Updated grammar rules and changed print statement to accept an identifier instead of an expression.&#10;- add.boom: Added a missing newline at the end of file.&#10;- CompileBoom.java: Removed unnecessary overridden methods and added a method to generate compiled code.&#10;- RunCompiler.java: Updated to use the new method in CompileBoom.java to get compiled code." />
    <MESSAGE value="feat(grammar): add comparison expressions to Boom.g4 grammar #master&#10;&#10;Added new comparison expressions to the Boom.g4 grammar file. The expressions include greaterExpr and lesserExpr, defined with 'HMPH' and 'GULP' operators respectively. Also introduced a while loop construct using the 'ZOINKS' and '?!'&#10;tokens." />
    <MESSAGE value="Generate an ANTLR Recognizer from the updated grammar file Boom.g4." />
    <MESSAGE value="feat: Update .gitignore, CompileBoom and RunCompiler.&#10;&#10;Created a new .gitignore file in the nand2tetris-vm-translator-master directory&#10;to ignore compiled class files, log files, BlueJ files, package files, virtual machine crash logs and IDE files.&#10;&#10;Updated the CompileBoom.java file to change the print command to pop and added additional functions for greater and lesser expressions, and while loops.&#10;&#10;Updated the RunCompiler.java file to prompt for the name of the compiled file, and write and save the compiled code to the specified file.&#10;&#10;Tested updated RunCompiler.java by inputting programs/add.boom as input file and saving the compiled file as programs/add.vm.&#10;&#10;Translated add.vm using the VM-Translator from https://github.com/koddas/nand2tetris-vm-translator , outputting the translated file to new file called out.vm." />
    <MESSAGE value="feat: Implement while loop and comparison expressions in Boom language&#10;&#10;- Updated Boom.g4 grammar file to include lesser, greater, and cond expressions and modified while structure.&#10;- Modified CompileBoom.java to handle lesser, greater, and cond expressions.&#10;- Added while.boom sample program." />
    <MESSAGE value="Generated ANTLR recognizer for the updated grammar file 'Boom.g4'." />
    <MESSAGE value="feat: Update while loop syntax and compiler logic&#10;&#10;This commit includes updates on the while loop syntax in the source code and the Boom.g4 file. The while loop condition now must be enclosed in parenthesis for better readability. Also, the '?!' and '!?' symbols were&#10;replaced with '?' and '?!' respectively.&#10;&#10;In the CompileBoom.java file, logic for handling the while loop was added.&#10;This includes the usage of two stacks, 'enterLabelStack' and 'exitLabelStack',&#10;and two counters 'enterLabelCounter' and 'exitLabelCounter' to manage loop labels. The compiler now generates appropriate labels and goto statements for&#10;the while loop. The conditional jump 'if-goto' is however not functioning properly.&#10;&#10;A new desired output file was also created to reflect the desired assembly code output.&#10;&#10;The changes were tested and confirmed to work as expected." />
    <MESSAGE value="feat: Add support for while loop in Boom language (#master)&#10;&#10;This commit introduces support for while loop in the Boom language. This feature has been implemented in the 'while.boom' program and the Boom grammar (Boom.g4). &#10;The changes include the addition of new constants for boolean values in 'CompileBoom.java', refactoring of exit and enter label handling in loops, and modification of certain condition handlers. Other changes include syntax cleanup, such as removal of excess newlines in 'while.boom'." />
    <MESSAGE value="feat: Add new files and update Boom.g4 grammar (master)&#10;&#10;This commit adds two new files:&#10;-'nestedWhile.boom' to test that nested while loops work as expected. &#10;-'repAdd.boom' to test that repeated addition of 1 to chosen integer n works as expected and prints the right sum value.&#10;&#10;It also changes the grammar file Boom.g4 to allow nested loops.&#10;&#10;It also translates repAdd.vm to 'repAddOut.vm' using the VM translator from https://github.com/koddas/nand2tetris-vm-translator to then test the translated code in the nand2tetris VM Emulator." />
    <MESSAGE value="feat: Simplify CompileBoom.java by removing unused imports and variables (master)&#10;&#10;This commit removes unnecessary imports and variables from CompileBoom.java, including the removal of unused imports such as 'java.util.HashMap' and 'org.antlr.v4.runtime.*'. It also removes unused static final Strings TRUE_VALUE and FALSE_VALUE, and commented-out code. The .idea/workspace.xml was also updated in this commit." />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Simplify CompileBoom.java by removing unused imports and variables (master)&#10;&#10;This commit removes unnecessary imports and variables from CompileBoom.java, including the removal of unused imports such as 'java.util.HashMap' and 'org.antlr.v4.runtime.*'. It also removes unused static final Strings TRUE_VALUE and FALSE_VALUE, and commented-out code. The .idea/workspace.xml was also updated in this commit." />
  </component>
</project>